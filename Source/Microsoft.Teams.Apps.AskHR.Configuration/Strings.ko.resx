<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="DefaultHelpTabText" xml:space="preserve">
    <value>안녕하세요. 저는 여러분의 친절한 Q&amp;A 봇입니다. 질문을 하시면 최선을 다해 답변해 드리겠습니다. 제가 답변할 수 없으면 전문가를 연결해 드리겠습니다.

저의 핵심 기능:

* 묻는 질문에 답하기
* 전문가에게 문의
* 피드백 공유</value>
    <comment>Default help static tab text to be stored in configuration app</comment>
  </data>
  <data name="DefaultWelcomeMessage" xml:space="preserve">
    <value>안녕하세요, 저는 여러분의 친절한 Q&amp;A 봇입니다. 질문을 하시면 최선을 다해 답변해 드리겠습니다. 제가 답변할 수 없으면 전문가를 연결해 드리겠습니다.

다음과 같은 질문을 할 수 있습니다.
* 어떻게 작동하나요?
* 어떤 혜택을 사용할 수 있나요?
* 지금 사용할 수 있는 혜택은 무엇인가요?</value>
    <comment>Default welcome message text to be stored in configuration app</comment>
  </data>
  <data name="HelpTabTextToolTipHoverMessage" xml:space="preserve">
    <value>봇의 [도움말] 탭에 표시할 텍스트를 입력한 다음 [확인]을 클릭하여 추가하거나 [편집]을 클릭하여 수정합니다</value>
    <comment>Message for help tab when information icon is hovered</comment>
  </data>
  <data name="KnowledgeBaseToolTipHoverMessage" xml:space="preserve">
    <value>봇에서 사용될 유효한 지식 기반 ID를 입력한 다음 [확인]을 클릭하여 추가하거나 [편집]을 클릭하여 수정합니다</value>
    <comment>Message for knowledgebase Id when information icon is hovered</comment>
  </data>
  <data name="StaticTabHRSupport" xml:space="preserve">
    <value>HR 지원</value>
    <comment>Static tab name</comment>
  </data>
  <data name="TeamIdToolTipHoverMessage" xml:space="preserve">
    <value>봇에서 사용할 팀 ID 딥 링크를 입력한 다음 [확인]을 클릭하여 추가하거나 [편집]을 클릭하여 수정합니다</value>
    <comment>Message for team Id when information icon is hovered</comment>
  </data>
  <data name="WelcomeMessageToolTipHoverMessage" xml:space="preserve">
    <value>봇에서 사용할 환영 메시지를 입력한 다음 [확인]을 클릭하여 추가하거나 [편집]을 클릭하여 수정합니다</value>
    <comment>Message for welcome message when information icon is hovered</comment>
  </data>
</root>